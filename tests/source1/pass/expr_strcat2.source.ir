; ModuleID = 'module'
source_filename = "module"

%literal = type { double, double }
%string_literal = type { double, i8* }

@format_number = private unnamed_addr constant [5 x i8] c"%lf\0A\00", align 1
@format_true = private unnamed_addr constant [6 x i8] c"true\0A\00", align 1
@format_false = private unnamed_addr constant [7 x i8] c"false\0A\00", align 1
@format_string = private unnamed_addr constant [6 x i8] c"\22%s\22\0A\00", align 1
@format_function = private unnamed_addr constant [17 x i8] c"function object\0A\00", align 1
@format_undef = private unnamed_addr constant [11 x i8] c"undefined\0A\00", align 1
@format_error = private unnamed_addr constant [13 x i8] c"error: \22%s\22\0A\00", align 1
@s = private unnamed_addr constant [4 x i8] c"123\00", align 1
@s.1 = private unnamed_addr constant [4 x i8] c"456\00", align 1
@0 = private unnamed_addr constant [18 x i8] c"boo type mismatch\00", align 1
@s.2 = private unnamed_addr constant [4 x i8] c"789\00", align 1
@1 = private unnamed_addr constant [18 x i8] c"boo type mismatch\00", align 1
@s.3 = private unnamed_addr constant [6 x i8] c"!!!!!\00", align 1
@2 = private unnamed_addr constant [18 x i8] c"boo type mismatch\00", align 1

declare i8* @malloc(i32)

declare i64 @printf(i8*, ...)

declare i8* @strcpy(i8*, i8*)

declare i32 @strlen(i8*)

declare i8* @strcat(i8*, i8*)

declare void @exit(i32)

define void @display(%literal* %0) {
entry:
  %1 = getelementptr inbounds %literal, %literal* %0, i32 0, i32 0
  %2 = getelementptr inbounds %literal, %literal* %0, i32 0, i32 1
  %3 = load double, double* %1
  %4 = load double, double* %2
  %5 = fcmp oeq double %3, 2.000000e+00
  br i1 %5, label %display_boolean, label %tmp

tmp:                                              ; preds = %entry
  %6 = fcmp oeq double %3, 3.000000e+00
  br i1 %6, label %display_string, label %tmp1

tmp1:                                             ; preds = %tmp
  %7 = fcmp oeq double %3, 4.000000e+00
  br i1 %7, label %display_function, label %tmp2

tmp2:                                             ; preds = %tmp1
  %8 = fcmp oeq double %3, 5.000000e+00
  br i1 %8, label %display_undefined, label %display_number

display_number:                                   ; preds = %tmp2
  %9 = call i64 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @format_number, i32 0, i32 0), double %4)
  br label %end

display_boolean:                                  ; preds = %entry
  %10 = fcmp oeq double %4, 1.000000e+00
  br i1 %10, label %print_true, label %print_false

print_true:                                       ; preds = %display_boolean
  %11 = call i64 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @format_true, i32 0, i32 0))
  br label %end

print_false:                                      ; preds = %display_boolean
  %12 = call i64 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @format_false, i32 0, i32 0))
  br label %end

display_string:                                   ; preds = %tmp
  %13 = bitcast double %4 to i64
  %14 = call i64 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @format_string, i32 0, i32 0), i64 %13)
  br label %end

display_function:                                 ; preds = %tmp1
  %15 = call i64 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @format_function, i32 0, i32 0))
  br label %end

display_undefined:                                ; preds = %tmp2
  %16 = call i64 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @format_undef, i32 0, i32 0))
  br label %end

end:                                              ; preds = %display_undefined, %display_function, %display_string, %print_false, %print_true, %display_number
  ret void
}

define void @error(i8* %0) {
entry:
  %1 = call i64 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @format_error, i32 0, i32 0), i8* %0)
  call void @exit(i32 1)
  ret void
}

define i8* @strconcat(i8* %0, i8* %1) {
entry:
  %2 = call i32 @strlen(i8* %0)
  %3 = call i32 @strlen(i8* %1)
  %4 = add i32 %2, %3
  %5 = add i32 %4, 1
  %6 = call i8* @malloc(i32 %5)
  %7 = call i8* @strcpy(i8* %6, i8* %0)
  %8 = call i8* @strcat(i8* %6, i8* %1)
  ret i8* %6
}

define i32 @main() {
entry:
  %env = call i8* @malloc(i32 8)
  %0 = bitcast i8* %env to %literal**
  %env1 = call i8* @malloc(i32 8)
  %1 = bitcast i8* %env1 to %literal**
  %2 = bitcast %literal** %1 to %literal***
  store %literal** %0, %literal*** %2
  %3 = call i8* @malloc(i32 16)
  %4 = bitcast i8* %3 to %string_literal*
  %5 = getelementptr inbounds %string_literal, %string_literal* %4, i32 0, i32 0
  %6 = getelementptr inbounds %string_literal, %string_literal* %4, i32 0, i32 1
  store double 3.000000e+00, double* %5
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @s, i32 0, i32 0), i8** %6
  %7 = bitcast %string_literal* %4 to %literal*
  %8 = call i8* @malloc(i32 16)
  %9 = bitcast i8* %8 to %string_literal*
  %10 = getelementptr inbounds %string_literal, %string_literal* %9, i32 0, i32 0
  %11 = getelementptr inbounds %string_literal, %string_literal* %9, i32 0, i32 1
  store double 3.000000e+00, double* %10
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @s.1, i32 0, i32 0), i8** %11
  %12 = bitcast %string_literal* %9 to %literal*
  %13 = getelementptr inbounds %literal, %literal* %7, i32 0, i32 1
  %14 = getelementptr inbounds %literal, %literal* %12, i32 0, i32 1
  %15 = load double, double* %13
  %16 = load double, double* %14
  %17 = getelementptr inbounds %literal, %literal* %7, i32 0, i32 0
  %18 = getelementptr inbounds %literal, %literal* %12, i32 0, i32 0
  %19 = load double, double* %17
  %20 = load double, double* %18
  %21 = fcmp oeq double %19, 1.000000e+00
  br i1 %21, label %add.num1, label %add.cstr1

add.num1:                                         ; preds = %entry
  %22 = fcmp oeq double %20, 1.000000e+00
  br i1 %22, label %add.num, label %add.err

add.cstr1:                                        ; preds = %entry
  %23 = fcmp oeq double %19, 3.000000e+00
  br i1 %23, label %add.cstr2, label %add.err

add.cstr2:                                        ; preds = %add.cstr1
  %24 = fcmp oeq double %20, 3.000000e+00
  br i1 %24, label %add.str, label %add.err

add.err:                                          ; preds = %add.cstr2, %add.cstr1, %add.num1
  call void @error(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @0, i32 0, i32 0))
  call void @exit(i32 1)
  br label %add.num

add.num:                                          ; preds = %add.err, %add.num1
  %25 = load double, double* %13
  %26 = load double, double* %14
  %27 = fadd double %25, %26
  %28 = call i8* @malloc(i32 16)
  %29 = bitcast i8* %28 to %literal*
  %30 = getelementptr inbounds %literal, %literal* %29, i32 0, i32 0
  %31 = getelementptr inbounds %literal, %literal* %29, i32 0, i32 1
  store double 1.000000e+00, double* %30
  store double %27, double* %31
  br label %add.end

add.str:                                          ; preds = %add.cstr2
  %32 = bitcast %literal* %7 to %string_literal*
  %33 = bitcast %literal* %12 to %string_literal*
  %34 = getelementptr inbounds %string_literal, %string_literal* %32, i32 0, i32 1
  %35 = getelementptr inbounds %string_literal, %string_literal* %33, i32 0, i32 1
  %36 = load i8*, i8** %34
  %37 = load i8*, i8** %35
  %38 = call i8* @strconcat(i8* %36, i8* %37)
  %39 = call i8* @malloc(i32 16)
  %40 = bitcast i8* %39 to %string_literal*
  %41 = getelementptr inbounds %string_literal, %string_literal* %40, i32 0, i32 0
  %42 = getelementptr inbounds %string_literal, %string_literal* %40, i32 0, i32 1
  store double 3.000000e+00, double* %41
  store i8* %38, i8** %42
  %43 = bitcast %string_literal* %40 to %literal*
  br label %add.end

add.end:                                          ; preds = %add.str, %add.num
  %44 = phi %literal* [ %29, %add.num ], [ %43, %add.str ]
  %45 = call i8* @malloc(i32 16)
  %46 = bitcast i8* %45 to %string_literal*
  %47 = getelementptr inbounds %string_literal, %string_literal* %46, i32 0, i32 0
  %48 = getelementptr inbounds %string_literal, %string_literal* %46, i32 0, i32 1
  store double 3.000000e+00, double* %47
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @s.2, i32 0, i32 0), i8** %48
  %49 = bitcast %string_literal* %46 to %literal*
  %50 = getelementptr inbounds %literal, %literal* %44, i32 0, i32 1
  %51 = getelementptr inbounds %literal, %literal* %49, i32 0, i32 1
  %52 = load double, double* %50
  %53 = load double, double* %51
  %54 = getelementptr inbounds %literal, %literal* %44, i32 0, i32 0
  %55 = getelementptr inbounds %literal, %literal* %49, i32 0, i32 0
  %56 = load double, double* %54
  %57 = load double, double* %55
  %58 = fcmp oeq double %56, 1.000000e+00
  br i1 %58, label %add.num12, label %add.cstr13

add.num12:                                        ; preds = %add.end
  %59 = fcmp oeq double %57, 1.000000e+00
  br i1 %59, label %add.num6, label %add.err5

add.cstr13:                                       ; preds = %add.end
  %60 = fcmp oeq double %56, 3.000000e+00
  br i1 %60, label %add.cstr24, label %add.err5

add.cstr24:                                       ; preds = %add.cstr13
  %61 = fcmp oeq double %57, 3.000000e+00
  br i1 %61, label %add.str7, label %add.err5

add.err5:                                         ; preds = %add.cstr24, %add.cstr13, %add.num12
  call void @error(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @1, i32 0, i32 0))
  call void @exit(i32 1)
  br label %add.num6

add.num6:                                         ; preds = %add.err5, %add.num12
  %62 = load double, double* %50
  %63 = load double, double* %51
  %64 = fadd double %62, %63
  %65 = call i8* @malloc(i32 16)
  %66 = bitcast i8* %65 to %literal*
  %67 = getelementptr inbounds %literal, %literal* %66, i32 0, i32 0
  %68 = getelementptr inbounds %literal, %literal* %66, i32 0, i32 1
  store double 1.000000e+00, double* %67
  store double %64, double* %68
  br label %add.end8

add.str7:                                         ; preds = %add.cstr24
  %69 = bitcast %literal* %44 to %string_literal*
  %70 = bitcast %literal* %49 to %string_literal*
  %71 = getelementptr inbounds %string_literal, %string_literal* %69, i32 0, i32 1
  %72 = getelementptr inbounds %string_literal, %string_literal* %70, i32 0, i32 1
  %73 = load i8*, i8** %71
  %74 = load i8*, i8** %72
  %75 = call i8* @strconcat(i8* %73, i8* %74)
  %76 = call i8* @malloc(i32 16)
  %77 = bitcast i8* %76 to %string_literal*
  %78 = getelementptr inbounds %string_literal, %string_literal* %77, i32 0, i32 0
  %79 = getelementptr inbounds %string_literal, %string_literal* %77, i32 0, i32 1
  store double 3.000000e+00, double* %78
  store i8* %75, i8** %79
  %80 = bitcast %string_literal* %77 to %literal*
  br label %add.end8

add.end8:                                         ; preds = %add.str7, %add.num6
  %81 = phi %literal* [ %66, %add.num6 ], [ %80, %add.str7 ]
  %82 = call i8* @malloc(i32 16)
  %83 = bitcast i8* %82 to %string_literal*
  %84 = getelementptr inbounds %string_literal, %string_literal* %83, i32 0, i32 0
  %85 = getelementptr inbounds %string_literal, %string_literal* %83, i32 0, i32 1
  store double 3.000000e+00, double* %84
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @s.3, i32 0, i32 0), i8** %85
  %86 = bitcast %string_literal* %83 to %literal*
  %87 = getelementptr inbounds %literal, %literal* %81, i32 0, i32 1
  %88 = getelementptr inbounds %literal, %literal* %86, i32 0, i32 1
  %89 = load double, double* %87
  %90 = load double, double* %88
  %91 = getelementptr inbounds %literal, %literal* %81, i32 0, i32 0
  %92 = getelementptr inbounds %literal, %literal* %86, i32 0, i32 0
  %93 = load double, double* %91
  %94 = load double, double* %92
  %95 = fcmp oeq double %93, 1.000000e+00
  br i1 %95, label %add.num19, label %add.cstr110

add.num19:                                        ; preds = %add.end8
  %96 = fcmp oeq double %94, 1.000000e+00
  br i1 %96, label %add.num13, label %add.err12

add.cstr110:                                      ; preds = %add.end8
  %97 = fcmp oeq double %93, 3.000000e+00
  br i1 %97, label %add.cstr211, label %add.err12

add.cstr211:                                      ; preds = %add.cstr110
  %98 = fcmp oeq double %94, 3.000000e+00
  br i1 %98, label %add.str14, label %add.err12

add.err12:                                        ; preds = %add.cstr211, %add.cstr110, %add.num19
  call void @error(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @2, i32 0, i32 0))
  call void @exit(i32 1)
  br label %add.num13

add.num13:                                        ; preds = %add.err12, %add.num19
  %99 = load double, double* %87
  %100 = load double, double* %88
  %101 = fadd double %99, %100
  %102 = call i8* @malloc(i32 16)
  %103 = bitcast i8* %102 to %literal*
  %104 = getelementptr inbounds %literal, %literal* %103, i32 0, i32 0
  %105 = getelementptr inbounds %literal, %literal* %103, i32 0, i32 1
  store double 1.000000e+00, double* %104
  store double %101, double* %105
  br label %add.end15

add.str14:                                        ; preds = %add.cstr211
  %106 = bitcast %literal* %81 to %string_literal*
  %107 = bitcast %literal* %86 to %string_literal*
  %108 = getelementptr inbounds %string_literal, %string_literal* %106, i32 0, i32 1
  %109 = getelementptr inbounds %string_literal, %string_literal* %107, i32 0, i32 1
  %110 = load i8*, i8** %108
  %111 = load i8*, i8** %109
  %112 = call i8* @strconcat(i8* %110, i8* %111)
  %113 = call i8* @malloc(i32 16)
  %114 = bitcast i8* %113 to %string_literal*
  %115 = getelementptr inbounds %string_literal, %string_literal* %114, i32 0, i32 0
  %116 = getelementptr inbounds %string_literal, %string_literal* %114, i32 0, i32 1
  store double 3.000000e+00, double* %115
  store i8* %112, i8** %116
  %117 = bitcast %string_literal* %114 to %literal*
  br label %add.end15

add.end15:                                        ; preds = %add.str14, %add.num13
  %118 = phi %literal* [ %103, %add.num13 ], [ %117, %add.str14 ]
  call void @display(%literal* %118)
  ret i32 0
}

